// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dashboard
    addMenuRecipes={[Function]}
    clearMenuRecipes={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavLink
          activeClassName="active"
          ariaCurrent="true"
          to="/recipes"
>
          <button
                    id="left-button"
          >
                    <img
                              alt="button"
                              id="left-image"
                              src="bar-button-left.png"
                    />
                    <span
                              className="button-text"
                              id="left-button-text"
                    >
                              BROWSE DRINKS
                    </span>
          </button>
</NavLink>,
        <NavLink
          activeClassName="active"
          ariaCurrent="true"
          to="/inventory"
>
          <button>
                    <img
                              alt="button"
                              src="bar-button-right.png"
                    />
                    <span
                              className="button-text"
                    >
                              INVENTORY
                    </span>
          </button>
</NavLink>,
        <button
          onClick={[Function]}
>
          <img
                    alt="button"
                    src="bar-button-right.png"
          />
          <span
                    className="button-text"
          >
                    BAR MENU
          </span>
</button>,
      ],
      "className": "dashboard-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "ariaCurrent": "true",
          "children": <button
            id="left-button"
>
            <img
                        alt="button"
                        id="left-image"
                        src="bar-button-left.png"
            />
            <span
                        className="button-text"
                        id="left-button-text"
            >
                        BROWSE DRINKS
            </span>
</button>,
          "to": "/recipes",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="button"
                id="left-image"
                src="bar-button-left.png"
/>,
              <span
                className="button-text"
                id="left-button-text"
>
                BROWSE DRINKS
</span>,
            ],
            "id": "left-button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "button",
                "id": "left-image",
                "src": "bar-button-left.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "BROWSE DRINKS",
                "className": "button-text",
                "id": "left-button-text",
              },
              "ref": null,
              "rendered": "BROWSE DRINKS",
              "type": "span",
            },
          ],
          "type": "button",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "ariaCurrent": "true",
          "children": <button>
            <img
                        alt="button"
                        src="bar-button-right.png"
            />
            <span
                        className="button-text"
            >
                        INVENTORY
            </span>
</button>,
          "to": "/inventory",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="button"
                src="bar-button-right.png"
/>,
              <span
                className="button-text"
>
                INVENTORY
</span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "button",
                "src": "bar-button-right.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "INVENTORY",
                "className": "button-text",
              },
              "ref": null,
              "rendered": "INVENTORY",
              "type": "span",
            },
          ],
          "type": "button",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="button"
              src="bar-button-right.png"
/>,
            <span
              className="button-text"
>
              BAR MENU
</span>,
          ],
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "button",
              "src": "bar-button-right.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "BAR MENU",
              "className": "button-text",
            },
            "ref": null,
            "rendered": "BAR MENU",
            "type": "span",
          },
        ],
        "type": "button",
      },
    ],
    "type": "aside",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            to="/recipes"
>
            <button
                        id="left-button"
            >
                        <img
                                    alt="button"
                                    id="left-image"
                                    src="bar-button-left.png"
                        />
                        <span
                                    className="button-text"
                                    id="left-button-text"
                        >
                                    BROWSE DRINKS
                        </span>
            </button>
</NavLink>,
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            to="/inventory"
>
            <button>
                        <img
                                    alt="button"
                                    src="bar-button-right.png"
                        />
                        <span
                                    className="button-text"
                        >
                                    INVENTORY
                        </span>
            </button>
</NavLink>,
          <button
            onClick={[Function]}
>
            <img
                        alt="button"
                        src="bar-button-right.png"
            />
            <span
                        className="button-text"
            >
                        BAR MENU
            </span>
</button>,
        ],
        "className": "dashboard-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": <button
              id="left-button"
>
              <img
                            alt="button"
                            id="left-image"
                            src="bar-button-left.png"
              />
              <span
                            className="button-text"
                            id="left-button-text"
              >
                            BROWSE DRINKS
              </span>
</button>,
            "to": "/recipes",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="button"
                  id="left-image"
                  src="bar-button-left.png"
/>,
                <span
                  className="button-text"
                  id="left-button-text"
>
                  BROWSE DRINKS
</span>,
              ],
              "id": "left-button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "button",
                  "id": "left-image",
                  "src": "bar-button-left.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "BROWSE DRINKS",
                  "className": "button-text",
                  "id": "left-button-text",
                },
                "ref": null,
                "rendered": "BROWSE DRINKS",
                "type": "span",
              },
            ],
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": <button>
              <img
                            alt="button"
                            src="bar-button-right.png"
              />
              <span
                            className="button-text"
              >
                            INVENTORY
              </span>
</button>,
            "to": "/inventory",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="button"
                  src="bar-button-right.png"
/>,
                <span
                  className="button-text"
>
                  INVENTORY
</span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "button",
                  "src": "bar-button-right.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "INVENTORY",
                  "className": "button-text",
                },
                "ref": null,
                "rendered": "INVENTORY",
                "type": "span",
              },
            ],
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="button"
                src="bar-button-right.png"
/>,
              <span
                className="button-text"
>
                BAR MENU
</span>,
            ],
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "button",
                "src": "bar-button-right.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "BAR MENU",
                "className": "button-text",
              },
              "ref": null,
              "rendered": "BAR MENU",
              "type": "span",
            },
          ],
          "type": "button",
        },
      ],
      "type": "aside",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
